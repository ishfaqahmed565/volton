@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}
@font-face {
  font-family: 'Quicksans Accurate ICG Fill';
  src: url('/fonts/QuicksansAccurateICGFill.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
  font-display: swap; 
}
.parent {
  display: flex;
}

.child {
 
  transition: filter 0.5s;
}

.child.blur {
  filter: blur(3px);
}
*{
    scroll-behavior: smooth;
}
@layer components{
  .cta-transition{
    @apply transition-all hover:shadow-md duration-500   hover:text-white   hover:border-[#44A3DE] hover:bg-[#44A3DE];
  }
  .info-text{
    @apply  text-sm md:text-base font-bold dark:text-white  ;
  }
} 
:root {
  --darkbg:#251D29;
  --darkt: #FFD1F7;
  --lightbg: #fff;
  --lightt: #D43370;
  
  --toggleHeight: 16em;
  --toggleWidth: 30em;
  --toggleBtnRadius: 10em;

  --bgColor--night: #423966;
  --toggleBtn-bgColor--night: var(--bgColor--night);
  --mooncolor: #D9FBFF;
  --bgColor--day: #9ee3fb;
  --toggleBtn-bgColor--day: var(--bgColor--day);
}

body{
  transition: all .2s ease-in-out;
  background: var(--darkbg);
  color: var(--darkt);
  text-align: center;
}
.light{
  background: var(--lightbg);
  color: var(--lightt);
}
.tdnn {
  margin: 0 auto;
  /*change size of toggle with font-size*/
  font-size: 1.5px;
   position: relative;
    height: var(--toggleHeight);
    width: var(--toggleWidth);
    border-radius: var(--toggleHeight);
  transition: all 500ms ease-in-out;
  background: var(--bgColor--night);
}
.day{
  background: #FFBF71;
}
.moon {
  position: absolute;
  display: block;
  border-radius: 50%;
  transition: all 400ms ease-in-out;
  
  top: 3em;
  left: 3em;
  transform: rotate(-75deg);
  width: var(--toggleBtnRadius);
  height: var(--toggleBtnRadius);
  background: var(--bgColor--night);
  box-shadow: 
    3em 2.5em 0 0em var(--mooncolor) inset,
    rgba(255, 255, 255, 0.1) 0em -7em 0 -4.5em,
    rgba(255, 255, 255, 0.1) 3em 7em 0 -4.5em,
    rgba(255, 255, 255, 0.1) 2em 13em 0 -4em,
    rgba(255, 255, 255, 0.1) 6em 2em 0 -4.1em,
    rgba(255, 255, 255, 0.1) 8em 8em 0 -4.5em,
    rgba(255, 255, 255, 0.1) 6em 13em 0 -4.5em,
    rgba(255, 255, 255, 0.1) -4em 7em 0 -4.5em,
    rgba(255, 255, 255, 0.1) -1em 10em 0 -4.5em;
}
.sun {
  top: 4.5em;
  left: 18em;
  transform: rotate(0deg);
  width: 7em;
  height: 7em;
  background: #fff;
  box-shadow: 3em 3em 0 5em #fff inset,
    0 -5em 0 -2.7em #fff,
    3.5em -3.5em 0 -3em #fff,
    5em 0 0 -2.7em #fff,
    3.5em 3.5em 0 -3em #fff,
    0 5em 0 -2.7em #fff,
    -3.5em 3.5em 0 -3em #fff,
    -5em 0 0 -2.7em #fff,
    -3.5em -3.5em 0 -3em #fff;
}
.hover-button {
  position: relative;
  color: black;
  cursor: pointer;
  overflow: hidden;
}

/* Create a pseudo-element for the gradient background */

.hover-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, #BA19FD, #706EEA, #43A1DF);
  opacity: 0; /* Initially transparent */
  transition: opacity 0.6s ease; /* Add a smooth transition for opacity */
  
}
.bg-blur {
  backdrop-filter: blur(5px); /* Apply a blur effect */
  pointer-events: none; /* Prevent the overlay from intercepting mouse events */
}

/* Define the styles for the button when hovered */
.hover-button:hover::before {
  opacity: 1; /* Make the gradient background fully visible on hover */
  
}

/* Additional button text styles */
.hover-button span {
  
  position: relative;
  z-index: 1;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}
